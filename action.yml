name: 'Publish Lambda Layer'
description: 'Publish a Lambda Layer to AWS based on a requirements.txt'
inputs:
  aws-access-key-id:
   description: 'AWS access key id'
   required: true
  aws-secret-access-key:
   description: 'AWS secret access key'
   required: true
  aws-default-region:
    description: 'AWS default region'
    required: false
    default: 'us-east-1'
  working-directory:
    description: 'The relative path of a directory containing the requirements.txt'
    required: false
    default: './'
  layer-name:
    description: 'The name of the layer'
    required: true
    default: ''
  python-runtime:
    description: 'The compatible python runtime, e.g.: python3.8'
    required: false
    default: 'python3.8'
  additional-python-runtimes:
    description: 'A space-delimited list of additional compatible python runtimes, e.g.: python3.7 python3.6'
    required: false
    default: ''
outputs:
  output:
    description: 'The output of aws lambda publish-layer-version in compact JSON format (https://docs.aws.amazon.com/cli/latest/reference/lambda/publish-layer-version.html#output)'
    value: ${{ steps.publish-layer.outputs.output }}
runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set Python version
      id: set-python-version
      shell: bash
      run: |
        python_version=$(echo ${{ inputs.python-runtime }} | sed 's/python//g')
        echo "python_version=${python_version}" >> $GITHUB_OUTPUT

    - name: Create Layer Bundle
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      env:
        python_runtimes: ${{ inputs.python-runtime }} ${{ inputs.additional-python-runtimes }}
      run: |
        # Install pyenv 
        curl https://pyenv.run | bash
        echo 'export PATH="/root/.pyenv/bin:$PATH"' >> $GITHUB_ENV
        echo 'eval "$(pyenv init -)"' >> $GITHUB_ENV
        echo 'eval "$(pyenv virtualenv-init -)"' >> $GITHUB_ENV
        source $GITHUB_ENV

        for runtime in $python_runtimes; do
          python_version=$(echo ${runtime} | sed 's/python//g')
          pyenv install $python_version
          pyenv use $python_version
          pip install -r requirements.txt -t python/lib/$runtime/site-packages/
        done

        zip -r layer.zip python > /dev/null
   
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-default-region }}
    
    - name: Publish Lambda Layer to AWS
      working-directory: ${{ inputs.working-directory }}
      id: publish-layer
      env:
        LAYER_NAME: ${{ inputs.layer-name }}
        RUNTIME: ${{ inputs.python-runtime }}
        ADDITIONAL_RUNTIMES: ${{ inputs.additional-python-runtimes }} 
      shell: bash
      run: |
        aws lambda publish-layer-version \
          --layer-name $LAYER_NAME \
          --zip-file fileb://layer.zip \
          --compatible-runtimes $RUNTIME $ADDITIONAL_RUNTIMES \
          | jq --compact-output '.' > publish-layer-output.json

        echo "output=$(cat publish-layer-output.json)" >> $GITHUB_OUTPUT
